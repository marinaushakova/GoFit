@model GoFit.Models.workout_exercise

@{
    ViewBag.Title = "AddExerciseToWorkout";
}

<h2>Add Exercise To Workout: @ViewBag.Workout.name</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        
        <div class="form-group">
            <label class="control-label col-md-2">Exercise:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.exercise_id, (IEnumerable<SelectListItem>)ViewBag.Exercises, new { onChange = "onSelectedIndexChanged()", id="cmbMeasure" })
                @Html.ValidationMessageFor(model => model.exercise_id)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Duration</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.duration)
                @Html.ValidationMessageFor(model => model.duration)
                <label id="lblMeasure">unit(s)</label>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Exercise" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@{Html.RenderAction("ExerciseList", "Home", new { id = @ViewBag.Workout.id });}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    function onSelectedIndexChanged() {
        var cmbEx = document.getElementById("cmbMeasure");
        var value = cmbEx.options[cmbEx.selectedIndex].value;

        $.get("@Url.Action("GetMeasure", "Home")", { ex_id: value }, function (measure) {
            document.getElementById('lblMeasure').innerHTML = measure + "(s)";
        });
    }
    </script>

}

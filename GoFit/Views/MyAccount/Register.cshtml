@model GoFit.Models.user

@{
    ViewBag.Title = "Register";
}
<div class="row">
<div class=" gofit-form well col-md-4">
    <div class="row">
        <div class="gofit_well_header">Register</div>
    </div>
    @using (Html.BeginForm())
    {
        <div class="form-horizontal">
            @Html.AntiForgeryToken()

            <h4>Create a new account.</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.Label("Username *", new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.username)
                    @Html.ValidationMessageFor(model => model.username)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Password *", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.password)
                    @Html.ValidationMessageFor(model => model.password)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("First name", new { @class = "control-label col-md-4" })
                <div class="dropdown col-md-8">
                    @Html.EditorFor(model => model.fname)
                    @Html.ValidationMessageFor(model => model.fname)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Last name", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.lname)
                    @Html.ValidationMessageFor(model => model.lname)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Gender", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @{
        List<SelectListItem> listItems = new List<SelectListItem>();
        listItems.Add(new SelectListItem
             {
                 Text = "Female",
                 Value = "0"
             });
        listItems.Add(new SelectListItem
             {
                 Text = "Male",
                 Value = "1"
             });
                    }

                    @Html.DropDownListFor(model => model.is_male, listItems, "--Select gender--", new { @class = "drop_down" })
                    @Html.ValidationMessageFor(model => model.is_male)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Weight", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.weight)
                    @Html.ValidationMessageFor(model => model.weight)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Height", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.height)
                    @Html.ValidationMessageFor(model => model.height)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" value="Register" class="btn btn-primary" />
                </div>
            </div>
            </div>
            }
        </div>
</div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
